/* This is some pseudocode for the Phone. This sets what every object in our
 * network should and should not send.
 */

/* The function "ScanQR()" scans for a QR-code and returns the retrieved data.
 */

/* The function "KortstePadSolver(currentLocation, finalDestination)"
 * determines the best possible step the Robot/MBED can do to reach its final
 * destination.
 * 
 * Simple example:
 * // Assumed that (0, 0) is in the SouthWest corner. A different corner is easily fixed.
 *
 * if(abs(finalDestination.x - currentLocation.x) > abs(finalDestination.y - currentLocation.y))
 *     if(finalDestination.x > currentLocation.x)
 *         return East
 *     else
 *         return West
 * else
 *     if(finalDestination.y > currentLocation.y)
 *         return North
 *     else
 *         return South
 */

/* The function "UpdateLocation(currentLocation, direction)" changes the value
 * in currentLocation, according to the direction.
 */

/* The function "RandomDirection()" randomly picks a direction.
 */

boolean roaming = true

while(!finalDestination)
	Receive finalDestination from Laptop through Bluetooth
	roaming = false
	
	Receive ready from MBED through USB
	QRdata = ScanQR()
	Send QRdata to Laptop through Bluetooth
	Receive currentLocation from Laptop through Bluetooth
	sent = false
	while(!sent)
		if(roaming)
			direction = RandomDirection()
		else if(!roaming)
			direction = KortstePadSolver(currentLocation, finalDestination)
		Send currentLocation, direction to Laptop through Bluetooth
		Receive confirmation from Laptop through Bluetooth
		if(confirmation)
			Send direction to MBED through USB
			currentLocation = UpdateLocation(currentLocation, direction)
			sent = true
